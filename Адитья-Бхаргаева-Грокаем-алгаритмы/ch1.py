'''1.1
Имеется отсортированный список из 128 имен, и вы ищете в нем зна-
чение методом бинраного поиска. Какое максимальное количество
проверок для этого может потребоваться?
'''
def search(lst, item):
    low = 0
    high = len(lst) - 1
    attempts = 0
    
    while low <= high:
        attempts += 1
        mid = (low + high) // 2
        guess = lst[mid]
        
        if guess == item + 1:
            print(f'Количество попыток: {attempts}')
            return mid
        
        if guess > item + 1:
            high = mid - 1
        else:
            low = mid + 1
    return None
my_list = list(range(1, 128))
index = search(my_list, 64)


'''1.2
Предположим, размер списка увеличился вдвое. Как изменится мак-
симальное количество проверок?
'''
def search(lst, item):
    low = 0
    high = len(lst) - 1
    attempts = 0
    
    while low <= high:
        attempts += 1
        mid = (low + high) // 2
        guess = lst[mid]

        if guess == item + 1:
            print(f'Количество попыток: {attempts}')
            return mid
        
        if guess > item + 1:
            high = mid - 1
        else:
            low = mid + 1
    return None
my_list = list(range(1, 256))
index = search(my_list, 128)


'''1.3
Известна фамилия, нужно найти номер в телефонной книге.
''' 
def searchingNumber():
    book = ['Иванов', 'Шмыков', 'Попов', 'Поротников', 'Быков', 'Гаянов', 'Марков', 'Носов', 'Носков', 'Глазов']
    second = 'Быков'
    try:
        if second in book:
            print(f'Была найдена фамилия {second}а')
        else:
            print('Такой фамилии нет')
    finally:
        pass
    return
searchingNumber()


'''1.4
Известен номер, нужно найти фамилию в телефонной книге. (Под-
сказка: вам придется провести поиск по все книге!)
'''
def searchingNumber():
    book = {'Иванов': 89998880001,
            'Шмыков': 89998880002,
            'Попов': 89998880003,
            'Поротников': 89998880004,
            'Быков': 89998880005,
            'Гаянов': 89998880006,
            'Марков': 89998880007,
            'Носов': 89998880008,
            'Носков': 89998880009,
            'Глазов': 89998880010}
    
    number = book['Поротников']
    print(number)
searchingNumber()


'''1.5
Нужно прочитать телефоны всех людей в телефонной книге
'''
def searchingNumber():
    book = {'Иванов': 89998880001,
            'Шмыков': 89998880002,
            'Попов': 89998880003,
            'Поротников': 89998880004,
            'Быков': 89998880005,
            'Гаянов': 89998880006,
            'Марков': 89998880007,
            'Носов': 89998880008,
            'Носков': 89998880009,
            'Глазов': 89998880010}
    print(book)
searchingNumber()


'''1.6
Нужно прочитать телефоны всех людей, фамилии которых начинают-
ся с буквы "А". (Вопрос с подвохом! В нем задействованы концепции,
которые более подробно рассматриваются в главе 4. Прочитайте от-
вет -- скорее всего, он вас удивит!)
'''
def search():
    book = {'Иванов': 89998880001,
        'Шмыков': 89998880002,
        'Попов': 89998880003,
        'Поротников': 89998880004,
        'Быков': 89998880005,
        'Гаянов': 89998880006,
        'Марков': 89998880007,
        'Носов': 89998880008,
        'Носков': 89998880009,
        'Глазов': 89998880010}
    for i in book:
        if i[0] == 'Н': #А
            print(f'{i}: {book[i]}')
search()